## Git ignore file
## See https://help.github.com/articles/ignoring-files/ for more about ignoring files.
## See https://help.github.com/articles/ignoring-files/#file-patterns for details about
## the patterns below.
.gitignore

.py*
._.*
# Logs
logs
*.log   
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
./logs
# Runtime data
pids
*.pid
*.seed
*.pid.lock
# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov
# Coverage directory used by tools like istanbul
coverage
*.lcov
.nyc_output
.grunt
gulp
bower_components
.jest
.vscode-test
# Dependency directories
node_modules/
jspm_packages/
# Optional eslint cache
.eslintcache
# Optional REPL history
.node_repl_history
# Output of 'npm pack'
*.tgz
# Yarn Integrity file
.yarn-integrity
# python virtual environment
venv/   
ENV/
env/
.venv/
# dotenv environment variables file
.env
.env.test
.env.production
.env.local
# python bytecode
__pycache__/
*.py[cod]
*$py.class
# R 
*.Rhistory
*.RData
*.Ruserdata
.Rproj.user/
# R package files
*.tar.gz
*.Rcheck/
# warp.dev files
.warp/

.py
c
# IPython Notebook
.ipynb_checkpoints
# pyenv
.python-version
# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.

#   However, in case of collaboration, if having platform-specific dependencies or dependencies 
#   having no cross-platform support, pipfile.lock will cause issues.
#   Thus, it is recommended to ignore pipfile.lock in such cases.
Pipfile.lock
# poetry
poetry.lock
# pyright
.pyright/
# mypy
.mypy_cache/
.dmypy.json
dmypy.sock
# Pyre type checker
.pyre/
# pytype
.pytype/
# C extensions
*.so
# Distribution / packaging
.Python

build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info
.installed.cfg
*.egg
MANIFEST
# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec
# Installer logs
pip-log.txt
pip-delete-this-directory.txt
# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis
.pytest_cache/
# Translations
*.mo
*.pot
# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal
# Flask stuff:
instance/
.webassets-cache
# Scrapy stuff:
.scrapy
# Sphinx documentation
docs/_build/
# PyBuilder
target/
# Jupyter Notebook

# powerbi files
*.pbix
*.pbit
# Microsoft Azure Functions
.local.settings.json
# Azure Web App publish settings
*.PublishSettings
# Visual Studio cache files
*.suo
*.user
*.userosscache
*.sln.docstates
# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap
# .uv files
*.uvsettings
*.uvcache
* uv/
uvcache/
uvx/
-uv/

# Microsoft Azure Web Apps
.scm/
# Local history for Visual Studio
.vs/
# Visual Studio Code
.vscode/
# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-
9]*.json
pids
*.pid
*.seed
*.pid.lock
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov
.nyc_output
.grunt
gulp
bower_components
.jest
.vscode-test
.idea
.vscode
*.sublime-workspace
*.sublime-project
.DS_Store
.env
.env.test
.env.production
.env.local

# Optional npm cache directory
.npm
.eslintcache
.next
.nuxt
out
dist
build
.cache

.gitignore
# Yarn Integrity file
.yarn-integrity
.pnp
.pnp.js
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.yarn/patches
.yarn/releases
.yarn/plugins
.yarn/sdks
.yarn/versions
.yarnrc.yml
.yarnclean
.yarn/*
.yarn/*
!.yarn/patches
!.yarn/releases
!.yarn/plugins

# parcel-bundler cache (https://parceljs.org/)
.cache

# Next.js build output
.next
out
# Nuxt.js build / generate output
.nuxt
dist
# Gatsby files
.cache/

# vuepress build output
.vuepress/dist
# Serverless directories
.serverless
.webpack


.terraform
.terraform.lock.hcl
.terragrunt-cache
# MacOS files
.DS_Store
Thumbs.db
ehthumbs.db
Desktop.ini
# Windows image file caches
*.stackdump
# Compiled source #
###################
*.com
*.class
*.dll
*.exe
*.o
*.so
# Package distribution #
####################
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip
# Backup files #
################
*~
*.bak
*.tmp
*.swp
*.swo
# IDEs and editors #
##################
.vscode/
.idea/
*.sublime-project

*.sublime-workspace
*.code-workspace
*.tmproj
*.project

# JetBrains
*.iml
*.iws
*.ipr
out/
# Rider
.idea/
*.sln
*.suo
*.user
*.userosscache

*.sln.docstates
# User-specific stuff
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates
# Mono Auto Generated Files
*.pidb
*.userprefs
# OS generated files #
##################
.DS_Store
.DS_Store?
.AppleDouble
.LSOverride
Icon?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
Desktop.ini
$RECYCLE.BIN/
# Windows image file caches
*.stackdump
# End of https://www.toptal.com/developers/gitignore/api:node,
macos,windows,linux,visualstudiocode,visualstudio,jetbrains
# Generated by https://www.toptal.com/developers/gitignore/api:node,macos,windows,linux,visualstudiocode,visualstudio,jetbrains
# Edit at your own risk
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.
# See https://help.github.com/articles/ignoring-files/#file-patterns for details about the patterns below.
# See https://git-scm.com/docs/gitignore for more details about ignoring files.
# See https://www.toptal.com/developers/gitignore for more information about this file.
# See https://www.toptal.com/developers/gitignore/api for more information about generating .gitignore files.
# Node.js
node_modules/
jspm_packages/
# Optional npm cache directory
.npm
.eslintcache
.next
.nuxt
out
dist
build
.cache
# Yarn Integrity file
.yarn-integrity
.pnp
.pnp.js
.yarn/cache
.yarn/unplugged

.yarn/build-state.yml
.yarn/install-state.gz
.yarn/patches
.yarn/releases
.yarn/plugins

.yarn/sdks
.yarn/versions
.yarnrc.yml

.yarnclean
.yarn/*
.yarn/*
!.yarn/patches



._*
